export type CrosserData = {
	/** The size of the grid. */
	size: [number, number]
	spots: Record<string, { row: number; col: number }>
	across: Record<string, { answer: string; clue: string }>
	down: Record<string, { answer: string; clue: string }>
}

// this is v1
// only supports rectangular grids
// only supports one type of black (what are they called?)
// spots could be generated by the grid size + blacks




// two versions of storage:
// pure. grid needs size, blacks, answer letters in each tile, clues for each line(?)
// generated. has "spots", 


// creator:
// show if
//  - has clue
// - doesnt have clue
// - is suggested to have a clue?



// add a "nomenclature" file with all definiteions, like grid, spot, black, clue, etc





